Run started on Tue Mar 21 13:34:39 2023

Hostname: csx2.cs.ucalgary.ca

-------------------------------------------------------------------------------
Running make |
--------------

% /usr/bin/make

STDOUT:
make: 'golf' is up to date.


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Locating GoLF compiler |
------------------------

Compiler will be run as ./golf

-------------------------------------------------------------------------------
Test: too few arguments |
-------------------------

% ./golf

STDOUT:
Usage: ./golf [filename]


STDERR:


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: too many arguments |
--------------------------

% ./golf /dev/null /dev/zero

STDOUT:
Usage: ./golf [filename]


STDERR:


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: nonexistent file |
------------------------

% ./golf /i/do/not/exist

STDOUT:


STDERR:
File /i/do/not/exist not found: "/home/ugb/joseph.vanlierop/Documents/cpsc-411"


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: later global "int" redeclaration |
----------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t1

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t1:4:9
  | 
4 | var foo int
  |         ^~~ error: expected type


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: global var declaration loop |
-----------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t2

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t2:4:9
  | 
4 | var int int
  |         ^~~ error: expected type


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: local var version of check.t2 |
-------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t3

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t3:5:10
  | 
5 |     var int int
  |             ^~~ error: expected type


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: global name test |
------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t4

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t4:7:8
  | 
7 |     printi(aft3rint)
  |           ^ error: function call does not match function signature


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: block scope check |
-------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t5

STDOUT:
program
	func sym=0x1ad10f0 @ (3, 1)
		newid [main] @ (3, 6)
		sig
			formals
			typeid [$void] sym=0x1ad0910
		block
			var sym=0x1ad1180 @ (4, 2)
				newid [x] @ (4, 6)
				typeid [int] sym=0x1ad0a30 @ (4, 8)
			block
				var sym=0x1ad1210 @ (6, 3)
					newid [x] @ (6, 7)
					typeid [bool] sym=0x1ad09a0 @ (6, 9)
				block
					var sym=0x1ad12a0 @ (8, 4)
						newid [x] @ (8, 8)
						typeid [string] sym=0x1ad0ac0 @ (8, 10)
					= sig=void @ (9, 6)
						id [x] sig=str sym=0x1ad12a0 @ (9, 4)
						string [asdf] sig=str @ (9, 9)
					block
						var sym=0x1ad1330 @ (11, 5)
							newid [x] @ (11, 9)
							typeid [int] sym=0x1ad0a30 @ (11, 11)
						= sig=void @ (12, 7)
							id [x] sig=int sym=0x1ad1330 @ (12, 5)
							+ sig=int @ (12, 11)
								id [x] sig=int sym=0x1ad1330 @ (12, 9)
								int [1] sig=int @ (12, 13)
					funccall sig=void @ (14, 10)
						id [prints] sig=f(str) sym=0x1ad0eb0 @ (14, 4)
						actuals
							id [x] sig=str sym=0x1ad12a0 @ (14, 11)
				funccall sig=void @ (16, 9)
					id [printb] sig=f(bool) sym=0x1ad0d00 @ (16, 3)
					actuals
						id [x] sig=bool sym=0x1ad1210 @ (16, 10)
			funccall sig=void @ (18, 8)
				id [printi] sig=f(int) sym=0x1ad0e20 @ (18, 2)
				actuals
					id [x] sig=int sym=0x1ad1180 @ (18, 9)


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: global var declaration, complex loop |
--------------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t6

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t6:3:9
  | 
3 | var int bool
  |         ^~~~ error: expected type


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: parameter scope test |
----------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t7

STDOUT:
program
	func sym=0x1b4cf20 @ (3, 1)
		newid [foo] @ (3, 6)
		sig
			formals
				formal
					newid [int] @ (3, 10)
					typeid [int] sym=0x1b4c860 @ (3, 14)
			typeid [int] sym=0x1b4c860 @ (3, 19)
		block
			funccall sig=void @ (4, 8)
				id [printi] sig=f(int) sym=0x1b4cc50 @ (4, 2)
				actuals
					id [int] sig=int sym=0x1b4c860 @ (4, 9)
			return @ (5, 2)
				id [int] sig=int sym=0x1b4c860 @ (5, 9)
	func sym=0x1b4cfb0 @ (8, 1)
		newid [bar] @ (8, 6)
		sig
			formals
				formal
					newid [bar] @ (8, 10)
					typeid [int] sym=0x1b4c860 @ (8, 14)
			typeid [$void] sym=0x1b4c740
		block
			emptystmt
	func sym=0x1b4d040 @ (11, 1)
		newid [string] @ (11, 6)
		sig
			formals
				formal
					newid [string] @ (11, 13)
					typeid [int] sym=0x1b4c860 @ (11, 20)
			typeid [bool] sym=0x1b4c7d0 @ (11, 25)
		block
			return @ (12, 2)
				id [true] sig=bool sym=0x1b4ca10 @ (12, 9)
	func sym=0x1b4d0d0 @ (15, 1)
		newid [main] @ (15, 6)
		sig
			formals
			typeid [$void] sym=0x1b4c740
		block
			emptystmt


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: constants can't be changed |
----------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t8

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t8:4:2
  | 
4 |     true = false
  |     ^~~~ error: cannot assign to a constant


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: nonexistent type name |
-----------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t9

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t9:3:7
  | 
3 | var x notthere
  |       ^~~~~~~~ error: unknown identifier "notthere"


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: type name not a type |
----------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t10

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t10:4:7
  | 
4 | var x t
  |       ^ error: expected type


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: formal parameters need types |
------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t11

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t11:6:21
  | 
6 | func foo(a1 int, a2 main, a3 bool) {
  |                     ^~~~ error: expected type


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: multiple (main) functions, same name |
--------------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t12

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t12:7:6
  | 
7 | func main() {
  |      ^~~~ error: "main" redefined


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: no main function |
------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t13

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t13:1:1
  | 
1 | // main() must be present
  | ^ error: missing main function


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: main can't have arguments |
---------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t14

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t14:3:1
  | 
3 | func main(argc int) {
  | ^ error: main function cannot have arguments


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: main can't have a return value |
--------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t15

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t15:3:1
  | 
3 | func main() int {
  | ^ error: main function cannot have a return type


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: dup check for formal parameters |
---------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t16

STDOUT:
program
	func sym=0x2084390 @ (4, 1)
		newid [main] @ (4, 6)
		sig
			formals
			typeid [$void] sym=0x2083bb0
		block
			emptystmt
	func sym=0x2084420 @ (7, 1)
		newid [foo] @ (7, 6)
		sig
			formals
				formal
					newid [i] @ (7, 10)
					typeid [int] sym=0x2083cd0 @ (7, 12)
				formal
					newid [b] @ (7, 17)
					typeid [bool] sym=0x2083c40 @ (7, 19)
				formal
					newid [i] @ (7, 25)
					typeid [int] sym=0x2083cd0 @ (7, 27)
			typeid [$void] sym=0x2083bb0
		block
			emptystmt


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: function call as lvalue |
-------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t17

STDOUT:


STDERR:


*** TERMINATION VIA SIGNAL: Segmentation fault

-------------------------------------------------------------------------------
Test: function name as lvalue |
-------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t18

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t18:6:2
  | 
6 |     foo = 123
  |     ^~~ error: cannot assign "int" to "foo"


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: humongous integer literal |
---------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t19

STDOUT:
program
	func sym=0x1ad76c0 @ (3, 1)
		newid [main] @ (3, 6)
		sig
			formals
			typeid [$void] sym=0x1ad6ee0
		block
			var sym=0x1ad7750 @ (4, 2)
				newid [i] @ (4, 6)
				typeid [int] sym=0x1ad7000 @ (4, 8)
			= sig=void @ (5, 4)
				id [i] sig=int sym=0x1ad7750 @ (5, 2)
				int [999999999999999999999999999999999999999999999999] sig=int @ (5, 6)


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: positive integer literal out of range |
---------------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t20

STDOUT:
program
	func sym=0x1d24080 @ (3, 1)
		newid [main] @ (3, 6)
		sig
			formals
			typeid [$void] sym=0x1d238a0
		block
			var sym=0x1d24110 @ (4, 2)
				newid [i] @ (4, 6)
				typeid [int] sym=0x1d239c0 @ (4, 8)
			= sig=void @ (5, 4)
				id [i] sig=int sym=0x1d24110 @ (5, 2)
				int [2147483647] sig=int @ (5, 6)
			= sig=void @ (6, 4)
				id [i] sig=int sym=0x1d24110 @ (6, 2)
				int [2147483648] sig=int @ (6, 6)


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: negative integer literal out of range |
---------------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t21

STDOUT:
program
	func sym=0x6f7db0 @ (3, 1)
		newid [main] @ (3, 6)
		sig
			formals
			typeid [$void] sym=0x6f75d0
		block
			var sym=0x6f7e40 @ (4, 2)
				newid [i] @ (4, 6)
				typeid [int] sym=0x6f76f0 @ (4, 8)
			= sig=void @ (5, 4)
				id [i] sig=int sym=0x6f7e40 @ (5, 2)
				int [-2147483648] sig=int @ (5, 6)
			= sig=void @ (6, 4)
				id [i] sig=int sym=0x6f7e40 @ (6, 2)
				int [-2147483649] sig=int @ (6, 6)


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: "break" not inside "for" loop |
-------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t22

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t22:7:2
  | 
7 |     break
  |     ^~~~~ error: break must be inside a for loop


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "break" in block, but not in "for" |
------------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t23

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t23:5:3
  | 
5 |         break
  |         ^~~~~ error: break must be inside a for loop


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "break" in "if" block |
-----------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t24

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t24:5:3
  | 
5 |         break
  |         ^~~~~ error: break must be inside a for loop


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: missing return statement |
--------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t25

STDOUT:
program
	func sym=0x1607ea0 @ (3, 1)
		newid [main] @ (3, 6)
		sig
			formals
			typeid [$void] sym=0x16076c0
		block
			emptystmt
	func sym=0x1607f30 @ (6, 1)
		newid [foo] @ (6, 6)
		sig
			formals
			typeid [string] sym=0x1607870 @ (6, 12)
		block
			emptystmt


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: returning value from void function |
------------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t26

STDOUT:
program
	func sym=0x73f140 @ (3, 1)
		newid [main] @ (3, 6)
		sig
			formals
			typeid [$void] sym=0x73e960
		block
			return @ (4, 2)
				int [123] sig=int @ (4, 9)


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: return type mismatch |
----------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t27

STDOUT:
program
	func sym=0x6e6050 @ (3, 1)
		newid [main] @ (3, 6)
		sig
			formals
			typeid [$void] sym=0x6e5870
		block
			emptystmt
	func sym=0x6e60e0 @ (6, 1)
		newid [foo] @ (6, 6)
		sig
			formals
			typeid [bool] sym=0x6e5900 @ (6, 12)
		block
			return @ (7, 2)
				int [123] sig=int @ (7, 9)


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: missing return type |
---------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t28

STDOUT:
program
	func sym=0xed8f30 @ (3, 1)
		newid [main] @ (3, 6)
		sig
			formals
			typeid [$void] sym=0xed8750
		block
			emptystmt
	func sym=0xed8fc0 @ (6, 1)
		newid [foo] @ (6, 6)
		sig
			formals
			typeid [bool] sym=0xed87e0 @ (6, 12)
		block
			return @ (7, 2)


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: "if" expr not a boolean type |
------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t29

STDOUT:
program
	func sym=0xfa6410 @ (3, 1)
		newid [main] @ (3, 6)
		sig
			formals
			typeid [$void] sym=0xfa5c30
		block
			if @ (4, 2)
				int [1] sig=int @ (4, 5)
				block
					emptystmt


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: "if"-"else" not a boolean type |
--------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t30

STDOUT:
program
	func sym=0x704e10 @ (3, 1)
		newid [main] @ (3, 6)
		sig
			formals
			typeid [$void] sym=0x704630
		block
			if @ (4, 2)
				int [1] sig=int @ (4, 5)
				block
					emptystmt
				else
					block
						emptystmt


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: "for" expr not a boolean type |
-------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t31

STDOUT:
program
	func sym=0xc84db0 @ (3, 1)
		newid [main] @ (3, 6)
		sig
			formals
			typeid [$void] sym=0xc845d0
		block
			for @ (4, 2)
				id [$true] sig=bool sym=0xc84810
				block
					emptystmt
			var sym=0xc84e40 @ (6, 2)
				newid [four] @ (6, 6)
				typeid [bool] sym=0xc84660 @ (6, 11)
			for @ (7, 2)
				id [four] sig=bool sym=0xc84e40 @ (7, 6)
				block
					emptystmt
			var sym=0xc84ed0 @ (9, 2)
				newid [ever] @ (9, 6)
				typeid [string] sym=0xc84780 @ (9, 11)
			for @ (10, 2)
				id [ever] sig=str sym=0xc84ed0 @ (10, 6)
				block
					emptystmt


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: legit expression statements |
-----------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t32

STDOUT:
program
	func sym=0x19f15c0 @ (3, 1)
		newid [main] @ (3, 6)
		sig
			formals
			typeid [$void] sym=0x19f0de0
		block
			var sym=0x19f1650 @ (4, 2)
				newid [i] @ (4, 6)
				typeid [int] sym=0x19f0f00 @ (4, 8)
			id [i] sig=int sym=0x19f1650 @ (5, 2)
			int [42] sig=int @ (6, 2)


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: built-in routine check |
------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t33

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t33:9:2
  | 
9 |     ch = getchar()
  |     ^~ error: cannot assign "void" to "ch"


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: actual parameter type check |
-----------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t34

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t34:4:8
  | 
4 |     prints(main)
  |           ^ error: function call does not match function signature


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: operand type mismatch |
-----------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t35

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t35:10:17
   | 
10 |         a = a + b
   |                 ^ error: invalid operand


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: another actual parameter type check |
-------------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t36

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t36:7:12
  | 
7 |         foo(123, 456)
  |            ^ error: function call does not match function signature


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: return+argument checks |
------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t37

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t37:4:24
  | 
4 |         return bar(bar(i))
  |                        ^ error: unknown identifier "i"


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: scope check and undefined variable |
------------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t38

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t38:10:3
   | 
10 |         c = 789
   |         ^ error: unknown identifier "c"


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: redefined variable |
--------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t39

STDOUT:
program
	globalvar sym=0xc7b2c0 @ (3, 1)
		newid [a] @ (3, 5)
		typeid [int] sym=0xc7ac00 @ (3, 7)
	func sym=0xc7b350 @ (5, 1)
		newid [main] @ (5, 6)
		sig
			formals
			typeid [$void] sym=0xc7aae0
		block
			var sym=0xc7b3e0 @ (6, 2)
				newid [a] @ (6, 6)
				typeid [bool] sym=0xc7ab70 @ (6, 8)
			if @ (7, 2)
				id [true] sig=bool sym=0xc7adb0 @ (7, 5)
				block
					var sym=0xc7b470 @ (8, 3)
						newid [a] @ (8, 7)
						typeid [string] sym=0xc7ac90 @ (8, 9)
					var sym=0xc7b500 @ (9, 3)
						newid [b] @ (9, 7)
						typeid [int] sym=0xc7ac00 @ (9, 9)
					block
						var sym=0xc7b590 @ (11, 4)
							newid [b] @ (11, 8)
							typeid [bool] sym=0xc7ab70 @ (11, 10)
					var sym=0xc7b500 @ (13, 3)
						newid [b] @ (13, 7)
						typeid [string] sym=0xc7ac90 @ (13, 9)


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: comparable and ordered comparisons |
------------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t40

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t40:4:12
  | 
4 |     "abc" == "def"
  |               ^~~ error: invalid operand


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: int/bool distinction |
----------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t41

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t41:5:2
  | 
5 |     i = true
  |     ^ error: cannot assign "bool" to "i"


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: deep type propagation |
-----------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t42

STDOUT:
program
	func sym=0x11a4d60 @ (3, 1)
		newid [main] @ (3, 6)
		sig
			formals
			typeid [$void] sym=0x11a4580
		block
			var sym=0x11a4df0 @ (4, 2)
				newid [x] @ (4, 6)
				typeid [int] sym=0x11a46a0 @ (4, 8)
			>= sig=bool @ (5, 18)
				- sig=int @ (5, 12)
					+ sig=int @ (5, 4)
						int [2] sig=int @ (5, 2)
						* sig=int @ (5, 8)
							int [3] sig=int @ (5, 6)
							int [5] sig=int @ (5, 10)
					int [123] sig=int @ (5, 14)
				u- sig=int @ (5, 21)
					u- sig=int @ (5, 23)
						u- sig=int @ (5, 25)
							id [x] sig=int sym=0x11a4df0 @ (5, 26)
			var sym=0x11a4e80 @ (7, 2)
				newid [b] @ (7, 6)
				typeid [bool] sym=0x11a4610 @ (7, 8)
			!= sig=bool @ (8, 34)
				! sig=bool @ (8, 2)
					! sig=bool @ (8, 3)
						! sig=bool @ (8, 4)
							|| sig=bool @ (8, 20)
								&& sig=bool @ (8, 11)
									id [true] sig=bool sym=0x11a4850 @ (8, 6)
									id [false] sig=bool sym=0x11a48e0 @ (8, 14)
								== sig=bool @ (8, 25)
									id [b] sig=bool sym=0x11a4e80 @ (8, 23)
									id [true] sig=bool sym=0x11a4850 @ (8, 28)
				<= sig=bool @ (8, 40)
					int [5] sig=int @ (8, 38)
					int [6] sig=int @ (8, 43)


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: redefining "true" and "false" |
-------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t43

STDOUT:
program
	globalvar sym=0x2397fa0 @ (3, 1)
		newid [true] @ (3, 5)
		typeid [int] sym=0x23978e0 @ (3, 10)
	func sym=0x2398030 @ (5, 1)
		newid [main] @ (5, 6)
		sig
			formals
			typeid [$void] sym=0x23977c0
		block
			var sym=0x23980c0 @ (6, 2)
				newid [false] @ (6, 6)
				typeid [int] sym=0x23978e0 @ (6, 12)
			funccall sig=void @ (7, 8)
				id [printi] sig=f(int) sym=0x2397cd0 @ (7, 2)
				actuals
					* sig=int @ (7, 14)
						id [true] sig=int sym=0x2397fa0 @ (7, 9)
						id [false] sig=int sym=0x23980c0 @ (7, 16)


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: call of non-function |
----------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t44

STDOUT:


STDERR:


*** TERMINATION VIA SIGNAL: Segmentation fault

-------------------------------------------------------------------------------
Test: type id used in wrong context |
-------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t45

STDOUT:
program
	func sym=0xe77650 @ (3, 1)
		newid [main] @ (3, 6)
		sig
			formals
			typeid [$void] sym=0xe76e70
		block
			var sym=0xe776e0 @ (4, 2)
				newid [x] @ (4, 6)
				typeid [int] sym=0xe76f90 @ (4, 8)
			= sig=void @ (5, 4)
				id [x] sig=int sym=0xe776e0 @ (5, 2)
				id [int] sig=int sym=0xe76f90 @ (5, 6)


STDERR:


RETURN CODE: 0

Run ended on Tue Mar 21 13:34:39 2023

