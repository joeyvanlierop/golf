Run started on Tue Mar 21 23:20:10 2023

Hostname: csx.cs.ucalgary.ca

-------------------------------------------------------------------------------
Running make |
--------------

% /usr/bin/make

STDOUT:
make: 'golf' is up to date.


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Locating GoLF compiler |
------------------------

Compiler will be run as ./golf

-------------------------------------------------------------------------------
Test: too few arguments |
-------------------------

% ./golf

STDOUT:
Usage: ./golf [filename]


STDERR:


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: too many arguments |
--------------------------

% ./golf /dev/null /dev/zero

STDOUT:
Usage: ./golf [filename]


STDERR:


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: nonexistent file |
------------------------

% ./golf /i/do/not/exist

STDOUT:


STDERR:
File /i/do/not/exist not found: "/home/ugb/joseph.vanlierop/Documents/cpsc-411"


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: later global "int" redeclaration |
----------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t1

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t1:4:9
  | 
4 | var foo int
  |         ^~~ error: expected type


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: global var declaration loop |
-----------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t2

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t2:4:9
  | 
4 | var int int
  |         ^~~ error: expected type


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: local var version of check.t2 |
-------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t3

STDOUT:
program
	func sym=0x12a5250 @ (4, 1)
		newid [main] @ (4, 6)
		sig
			formals
			typeid [$void] sym=0x12a4a70
		block
			var sym=0x12a52e0 @ (5, 2)
				newid [int] @ (5, 6)
				typeid [int] sym=0x12a4b90 @ (5, 10)
			funccall sig=void @ (6, 8)
				id [printi] sig=f(int) sym=0x12a4f80 @ (6, 2)
				actuals
					id [int] sig=int sym=0x12a52e0 @ (6, 9)


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: global name test |
------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t4

STDOUT:
program
	globalvar sym=0x10ee840 @ (3, 1)
		newid [b4int] @ (3, 5)
		typeid [int] sym=0x10ee180 @ (3, 11)
	func sym=0x10ee8d0 @ (5, 1)
		newid [b4func] @ (5, 6)
		sig
			formals
			typeid [$void] sym=0x10ee060
		block
			funccall sig=void @ (6, 8)
				id [printi] sig=f(int) sym=0x10ee570 @ (6, 2)
				actuals
					id [b4int] sig=int sym=0x10ee840 @ (6, 9)
			funccall sig=void @ (7, 8)
				id [printi] sig=f(int) sym=0x10ee570 @ (7, 2)
				actuals
					id [aft3rint] sig=int sym=0x10eea80 @ (7, 9)
			funccall sig=void @ (8, 11)
				id [aft3rfunc] sig=f() sym=0x10ee9f0 @ (8, 2)
				actuals
	func sym=0x10ee960 @ (11, 1)
		newid [main] @ (11, 6)
		sig
			formals
			typeid [$void] sym=0x10ee060
		block
			funccall sig=void @ (12, 8)
				id [b4func] sig=f() sym=0x10ee8d0 @ (12, 2)
				actuals
	func sym=0x10ee9f0 @ (15, 1)
		newid [aft3rfunc] @ (15, 6)
		sig
			formals
			typeid [$void] sym=0x10ee060
		block
			funccall sig=void @ (16, 8)
				id [printi] sig=f(int) sym=0x10ee570 @ (16, 2)
				actuals
					id [b4int] sig=int sym=0x10ee840 @ (16, 9)
			funccall sig=void @ (17, 8)
				id [printi] sig=f(int) sym=0x10ee570 @ (17, 2)
				actuals
					id [aft3rint] sig=int sym=0x10eea80 @ (17, 9)
	globalvar sym=0x10eea80 @ (20, 1)
		newid [aft3rint] @ (20, 5)
		typeid [int] sym=0x10ee180 @ (20, 14)


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: block scope check |
-------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t5

STDOUT:


STDERR:


*** TERMINATION VIA SIGNAL: Segmentation fault

-------------------------------------------------------------------------------
Test: global var declaration, complex loop |
--------------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t6

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t6:3:9
  | 
3 | var int bool
  |         ^~~~ error: expected type


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: parameter scope test |
----------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t7

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t7:3:14
  | 
3 | func foo(int int) int {
  |              ^~~ error: expected type


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: constants can't be changed |
----------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t8

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t8:4:2
  | 
4 |     true = false
  |     ^~~~ error: cannot assign to a constant


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: nonexistent type name |
-----------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t9

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t9:3:7
  | 
3 | var x notthere
  |       ^~~~~~~~ error: unknown identifier "notthere"


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: type name not a type |
----------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t10

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t10:4:7
  | 
4 | var x t
  |       ^ error: expected type


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: formal parameters need types |
------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t11

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t11:6:21
  | 
6 | func foo(a1 int, a2 main, a3 bool) {
  |                     ^~~~ error: expected type


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: multiple (main) functions, same name |
--------------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t12

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t12:7:6
  | 
7 | func main() {
  |      ^~~~ error: "main" redefined


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: no main function |
------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t13

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t13:1:1
  | 
1 | // main() must be present
  | ^ error: missing main function


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: main can't have arguments |
---------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t14

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t14:3:1
  | 
3 | func main(argc int) {
  | ^ error: main function cannot have arguments


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: main can't have a return value |
--------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t15

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t15:3:1
  | 
3 | func main() int {
  | ^ error: main function cannot have a return type


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: dup check for formal parameters |
---------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t16

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t16:7:25
  | 
7 | func foo(i int, b bool, i int) {
  |                         ^ error: "i" redefined


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: function call as lvalue |
-------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t17

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t17:6:5
  | 
6 |     foo() = 123
  |        ^ error: cannot assign to a non-variable


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: function name as lvalue |
-------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t18

STDOUT:


STDERR:


*** TERMINATION VIA SIGNAL: Segmentation fault

-------------------------------------------------------------------------------
Test: humongous integer literal |
---------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t19

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t19:5:6
  | 
5 |     i = 999999999999999999999999999999999999999999999999
  |         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ error: integer literal out of range


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: positive integer literal out of range |
---------------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t20

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t20:6:6
  | 
6 |     i = 2147483648    // less ok
  |         ^~~~~~~~~~ error: integer literal too large


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: negative integer literal out of range |
---------------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t21

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t21:6:6
  | 
6 |     i = -2147483649    // less ok
  |         ^~~~~~~~~~~ error: integer literal too small


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "break" not inside "for" loop |
-------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t22

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t22:7:2
  | 
7 |     break
  |     ^~~~~ error: break must be inside a for loop


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "break" in block, but not in "for" |
------------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t23

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t23:5:3
  | 
5 |         break
  |         ^~~~~ error: break must be inside a for loop


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "break" in "if" block |
-----------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t24

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t24:5:3
  | 
5 |         break
  |         ^~~~~ error: break must be inside a for loop


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: missing return statement |
--------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t25

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t25:6:1
  | 
6 | func foo() string {
  | ^ error: missing return statement in non-void function


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: returning value from void function |
------------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t26

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t26:4:9
  | 
4 |     return 123
  |            ^~~ error: incorrect return type


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: return type mismatch |
----------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t27

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t27:7:9
  | 
7 |     return 123
  |            ^~~ error: incorrect return type


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: missing return type |
---------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t28

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t28:7:2
  | 
7 |     return
  |     ^ error: non-void function must return a value


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "if" expr not a boolean type |
------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t29

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t29:4:5
  | 
4 |     if 1 {
  |        ^ error: if expression must be a boolean type


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "if"-"else" not a boolean type |
--------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t30

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t30:4:5
  | 
4 |     if 1 {
  |        ^ error: if expression must be a boolean type


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: "for" expr not a boolean type |
-------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t31

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t31:10:6
   | 
10 |     for ever {
   |         ^~~~ error: for expression must be a boolean type


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: legit expression statements |
-----------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t32

STDOUT:
program
	func sym=0x1adfa00 @ (3, 1)
		newid [main] @ (3, 6)
		sig
			formals
			typeid [$void] sym=0x1adf110
		block
			var sym=0x1adfa90 @ (4, 2)
				newid [i] @ (4, 6)
				typeid [int] sym=0x1adf230 @ (4, 8)
			id [i] sig=int sym=0x1adfa90 @ (5, 2)
			int [42] sig=int @ (6, 2)


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: built-in routine check |
------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t33

STDOUT:


STDERR:


*** TERMINATION VIA SIGNAL: Segmentation fault

-------------------------------------------------------------------------------
Test: actual parameter type check |
-----------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t34

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t34:4:8
  | 
4 |     prints(main)
  |           ^ error: function call does not match function signature


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: operand type mismatch |
-----------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t35

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t35:10:15
   | 
10 |         a = a + b
   |               ^ error: operand type mismatch


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: another actual parameter type check |
-------------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t36

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t36:7:12
  | 
7 |         foo(123, 456)
  |            ^ error: function call does not match function signature


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: return+argument checks |
------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t37

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t37:8:19
  | 
8 |         return foo(foo(b))
  |                   ^ error: function call does not match function signature


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: scope check and undefined variable |
------------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t38

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t38:10:3
   | 
10 |         c = 789
   |         ^ error: unknown identifier "c"


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: redefined variable |
--------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t39

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t39:13:7
   | 
13 |         var b string
   |             ^ error: "b" redefined


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: comparable and ordered comparisons |
------------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t40

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t40:8:7
  | 
8 |     true > false
  |          ^ error: operand type mismatch


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: int/bool distinction |
----------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t41

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t41:5:2
  | 
5 |     i = true
  |     ^ error: cannot assign "bool" to "i"


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: deep type propagation |
-----------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t42

STDOUT:
program
	func sym=0x15eb200 @ (3, 1)
		newid [main] @ (3, 6)
		sig
			formals
			typeid [$void] sym=0x15eaa20
		block
			var sym=0x15eb290 @ (4, 2)
				newid [x] @ (4, 6)
				typeid [int] sym=0x15eab40 @ (4, 8)
			>= sig=bool @ (5, 18)
				- sig=int @ (5, 12)
					+ sig=int @ (5, 4)
						int [2] sig=int @ (5, 2)
						* sig=int @ (5, 8)
							int [3] sig=int @ (5, 6)
							int [5] sig=int @ (5, 10)
					int [123] sig=int @ (5, 14)
				u- sig=int @ (5, 21)
					u- sig=int @ (5, 23)
						u- sig=int @ (5, 25)
							id [x] sig=int sym=0x15eb290 @ (5, 26)
			var sym=0x15eb320 @ (7, 2)
				newid [b] @ (7, 6)
				typeid [bool] sym=0x15eaab0 @ (7, 8)
			!= sig=bool @ (8, 34)
				! sig=bool @ (8, 2)
					! sig=bool @ (8, 3)
						! sig=bool @ (8, 4)
							|| sig=bool @ (8, 20)
								&& sig=bool @ (8, 11)
									id [true] sig=bool sym=0x15eacf0 @ (8, 6)
									id [false] sig=bool sym=0x15ead80 @ (8, 14)
								== sig=bool @ (8, 25)
									id [b] sig=bool sym=0x15eb320 @ (8, 23)
									id [true] sig=bool sym=0x15eacf0 @ (8, 28)
				<= sig=bool @ (8, 40)
					int [5] sig=int @ (8, 38)
					int [6] sig=int @ (8, 43)


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: redefining "true" and "false" |
-------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t43

STDOUT:
program
	globalvar sym=0xa0f460 @ (3, 1)
		newid [true] @ (3, 5)
		typeid [int] sym=0xa0eda0 @ (3, 10)
	func sym=0xa0f4f0 @ (5, 1)
		newid [main] @ (5, 6)
		sig
			formals
			typeid [$void] sym=0xa0ec80
		block
			var sym=0xa0f580 @ (6, 2)
				newid [false] @ (6, 6)
				typeid [int] sym=0xa0eda0 @ (6, 12)
			funccall sig=void @ (7, 8)
				id [printi] sig=f(int) sym=0xa0f190 @ (7, 2)
				actuals
					* sig=int @ (7, 14)
						id [true] sig=int sym=0xa0f460 @ (7, 9)
						id [false] sig=int sym=0xa0f580 @ (7, 16)


STDERR:


RETURN CODE: 0

-------------------------------------------------------------------------------
Test: call of non-function |
----------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t44

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t44:4:3
  | 
4 |     "asdf"(1,2,3)
  |      ^~~~ error: invalid function id


RETURN CODE: 1

-------------------------------------------------------------------------------
Test: type id used in wrong context |
-------------------------------------

% ./golf /home/profs/aycock/411/TEST/ms3/check.t45

STDOUT:


STDERR:
--> /home/profs/aycock/411/TEST/ms3/check.t45:5:6
  | 
5 |     x = int
  |         ^~~ error: cannot assign a type


RETURN CODE: 1

Run ended on Tue Mar 21 23:20:11 2023

